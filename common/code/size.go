package code

/* This file is automatically generated */

type SizeType byte

const (
	Size256KbJ1 SizeType = 18 //0x12
	Size512KbJ1 SizeType = 19 //0x13
	Size1MbJ1   SizeType = 20 //0x14
	Size2MbJ1   SizeType = 21 //0x15
	Size4MbJ1   SizeType = 22 //0x16
	Size8MbJ1   SizeType = 23 //0x17
	Size16MbJ1  SizeType = 24 //0x18
	Size32MbJ1  SizeType = 25 //0x19
	Size64MbJ1  SizeType = 26 //0x1a
	Size128MbJ1 SizeType = 27 //0x1b
	Size256MbJ1 SizeType = 28 //0x1c

	Size64MbJ2  SizeType = 32 //0x20
	Size128MbJ2 SizeType = 33 //0x21
	Size256MbJ2 SizeType = 34 //0x22

	Size256KbJ3 SizeType = 50 //0x32
	Size512KbJ3 SizeType = 51 //0x33
	Size1MbJ3   SizeType = 52 //0x34
	Size2MbJ3   SizeType = 53 //0x35
	Size4MbJ3   SizeType = 54 //0x36
	Size8MbJ3   SizeType = 55 //0x37
	Size16MbJ3  SizeType = 56 //0x38
	Size32MbJ3  SizeType = 57 //0x39
	Size64MbJ3  SizeType = 58 //0x3a
)

const (
	SizeText256KbJ1 = "256Kb J1"
	SizeText512KbJ1 = "512Kb J1"
	SizeText1MbJ1   = "1Mb J1"
	SizeText2MbJ1   = "2Mb J1"
	SizeText4MbJ1   = "4Mb J1"
	SizeText8MbJ1   = "8Mb J1"
	SizeText16MbJ1  = "16Mb J1"
	SizeText32MbJ1  = "32Mb J1"
	SizeText64MbJ1  = "64Mb J1"
	SizeText128MbJ1 = "128Mb J1"
	SizeText256MbJ1 = "256Mb J1"

	SizeText64MbJ2  = "64Mb J2"
	SizeText128MbJ2 = "128Mb J2"
	SizeText256MbJ2 = "256Mb J2"

	SizeText256KbJ3 = "256Kb J3"
	SizeText512KbJ3 = "512Kb J3"
	SizeText1MbJ3   = "1Mb J3"
	SizeText2MbJ3   = "2Mb J3"
	SizeText4MbJ3   = "4Mb J3"
	SizeText8MbJ3   = "8Mb J3"
	SizeText16MbJ3  = "16Mb J3"
	SizeText32MbJ3  = "32Mb J3"
	SizeText64MbJ3  = "64Mb J3"
)

var SizeMap = map[SizeType]string{
	Size256KbJ1: SizeText256KbJ1,
	Size512KbJ1: SizeText512KbJ1,
	Size1MbJ1:   SizeText1MbJ1,
	Size2MbJ1:   SizeText2MbJ1,
	Size4MbJ1:   SizeText4MbJ1,
	Size8MbJ1:   SizeText8MbJ1,
	Size16MbJ1:  SizeText16MbJ1,
	Size32MbJ1:  SizeText32MbJ1,
	Size64MbJ1:  SizeText64MbJ1,
	Size128MbJ1: SizeText128MbJ1,
	Size256MbJ1: SizeText256MbJ1,
	Size64MbJ2:  SizeText64MbJ2,
	Size128MbJ2: SizeText128MbJ2,
	Size256MbJ2: SizeText256MbJ2,
	Size256KbJ3: SizeText256KbJ3,
	Size512KbJ3: SizeText512KbJ3,
	Size1MbJ3:   SizeText1MbJ3,
	Size2MbJ3:   SizeText2MbJ3,
	Size4MbJ3:   SizeText4MbJ3,
	Size8MbJ3:   SizeText8MbJ3,
	Size16MbJ3:  SizeText16MbJ3,
	Size32MbJ3:  SizeText32MbJ3,
	Size64MbJ3:  SizeText64MbJ3,
}

func (obj SizeType) String() string {
	val, ok := SizeMap[obj]
	if ok {
		return val
	}
	return "Unknown SizeType"
}
